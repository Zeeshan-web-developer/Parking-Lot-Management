{"version":3,"file":"static/js/202.0780cbd0.chunk.js","mappings":"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","sources":["components/Header.jsx","components/Button.jsx","components/InputField.jsx","components/VehicleCard.jsx","pages/Home/components/SearchVehicle.jsx","pages/Home/components/AddedVehicles.jsx","pages/Home/components/AddNewVehicle.jsx","pages/Home/components/FullParking.jsx","pages/Home/components/RemainngSlots.jsx","components/ConfirmAlert.js","pages/Home/hooks/useHandleParking.js","constants.js","pages/Home/container/Home.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"; // ES6\n\nimport Logo from \"../assets/images/logo.webp\";\nimport { Link } from \"react-router-dom\";\nconst Header = ({ children }) => {\n  return (\n    <header className=\"bg-background text-white shadow-md mb-2\">\n      <div className=\"container mx-auto p-4 flex justify-between items-center\">\n        <div className=\"text-2xl font-bold\">\n          <Link to=\"#\" className=\"link__hover\">\n            <h2 className=\"text-white hover:text-blue-500 transition duration-300 ease-in-out cursor-pointer\">\n              KanzWay\n            </h2>\n          </Link>\n        </div>\n\n        <div>{children ? children : null}</div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Header;\n","import PropTypes from \"prop-types\"; // ES6\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"bg-button hover:bg-gray-700 text-white py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-gray-900 focus:ring-opacity-50\"\n    >\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\"; // ES6\n\nconst InputField = ({\n  value,\n  onChange,\n  placeholder,\n  icon,\n  handleButtonClick = () => {},\n}) => {\n  return (\n    <div className=\"relative\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        className=\"text-black w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:ring-green-300\"\n      />\n      {value && (\n        <button\n          type=\"button\"\n          onClick={handleButtonClick}\n          className=\"absolute inset-y-0 right-0 flex items-center pr-3\"\n        >\n          {icon ? icon : null}\n        </button>\n      )}\n    </div>\n  );\n};\n\nInputField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  handleButtonClick: PropTypes.func,\n};\nexport default InputField;\n","import PropTypes from \"prop-types\"; // ES6\nimport Button from \"./Button\";\n\nconst VehicleCard = ({ vehicle, onRemove, index, parkedDuration }) => {\n  return (\n    <div\n      className=\" hover:shadow-lg transition duration-300 ease-in-out\n    \n    border rounded p-4 flex justify-between items-center bg-gray-100\"\n    >\n      <div>\n        <p className=\"text-lg font-bold\">License Plate: {vehicle.plate}</p>\n        <p className=\"text-sm text-gray-600\">Parked for {parkedDuration}</p>\n        <p className=\"text-sm text-gray-600\">\n          Parking Spot: {vehicle?.slotNumber}\n        </p>\n      </div>\n      <Button\n        onClick={() => onRemove(index)}\n        label=\"Remove\"\n        color=\"bg-red-500\"\n      />\n    </div>\n  );\n};\n\nVehicleCard.propTypes = {\n  vehicle: PropTypes.shape({\n    plate: PropTypes.string.isRequired,\n    slotNumber: PropTypes.number.isRequired,\n    parkedAt: PropTypes.instanceOf(Date),\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  parkedDuration: PropTypes.string.isRequired,\n};\n\nexport default VehicleCard;\n","import React from \"react\";\nimport { InputField } from \"components/index\";\nimport { MdClear, MdSearch } from \"react-icons/md\";\nimport PropTypes from \"prop-types\"; // ES6\n\nfunction SearchVehicle({ filter, setFilter }) {\n  return (\n    <div className=\"flex-1 bg-background p-4 rounded shadow \">\n      <h2 className=\"text-xl font-semibold mb-2 text-white\">Search Vehicle</h2>\n      <div className=\"mb-4 flex justify-center items-center gap-2\">\n        <InputField\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          placeholder=\"Filter by License Plate\"\n          className=\"flex-1\" // Ensure the input takes up available space\n          icon={filter && <MdClear className=\"text-gray-400\" />}\n          handleButtonClick={() => setFilter(\"\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nSearchVehicle.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default React.memo(SearchVehicle);\n","import React from \"react\";\nimport { VehicleCard } from \"components/index\";\nimport PropTypes from \"prop-types\"; // ES6\n\nfunction AddedVehicles({ filteredSpots, removeVehicle, getParkedDuration }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {filteredSpots?.length > 0 ? (\n        filteredSpots?.map((spot, index) => (\n          <VehicleCard\n            key={index}\n            vehicle={spot}\n            onRemove={removeVehicle}\n            index={index}\n            parkedDuration={getParkedDuration(spot.parkedAt)}\n          />\n        ))\n      ) : (\n        <div className=\"text-center text-gray-500\">No vehicles found</div>\n      )}\n    </div>\n  );\n}\n\nAddedVehicles.propTypes = {\n  filteredSpots: PropTypes.arrayOf(PropTypes.object),\n  removeVehicle: PropTypes.func.isRequired,\n  getParkedDuration: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddedVehicles);\n","import React from \"react\";\nimport { InputField, Button } from \"components/index\";\nimport PropTypes from \"prop-types\"; // ES6\nimport { MdAdd } from \"react-icons/md\";\n\nfunction AddNewVehicle({ licensePlate, setLicensePlate, parkVehicle }) {\n  return (\n    <div className=\"flex-1 bg-background p-4 rounded shadow \">\n      <h2 className=\"text-xl font-semibold mb-2 text-white\">\n        <MdAdd className=\"text-2xl inline-block ml-2 text-white\" />\n        Add New Vehicle\n      </h2>\n      <div className=\"flex flex-col sm:flex-row justify-center items-center gap-2 mb-6\">\n        <InputField\n          value={licensePlate}\n          onChange={(e) => setLicensePlate(e.target.value)}\n          placeholder=\"Enter License Plate\"\n          className=\"flex-1\" // Ensures the input takes up available space\n        />\n        <Button\n          onClick={parkVehicle}\n          label=\"Park Vehicle\"\n          color=\"bg-green-500\"\n        />\n      </div>\n    </div>\n  );\n}\n\nAddNewVehicle.propTypes = {\n  licensePlate: PropTypes.string.isRequired,\n  setLicensePlate: PropTypes.func.isRequired,\n  parkVehicle: PropTypes.func.isRequired,\n};\n\nexport default AddNewVehicle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"; // ES6\n\nfunction FullParking({ parkingSpots }) {\n  return (\n    <>\n      {parkingSpots.every((spot) => spot !== null) && (\n        <p className=\"mt-4 text-center text-red-600 font-bold\">\n          Parking lot is full. No spots available.\n        </p>\n      )}\n    </>\n  );\n}\n\nFullParking.propTypes = {\n  parkingSpots: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default React.memo(FullParking);\n","import React from \"react\";\nimport { FaParking } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\"; // ES6\n\nconst RemainingSlots = ({ parkingSpots }) => {\n  const remainingSlots = parkingSpots?.filter((spot) => spot === null).length;\n\n  return (\n    <div className=\"flex flex-col items-center justify-center bg-button border border-black rounded-lg p-2 shadow-md mb-1\">\n      <div className=\"flex items-center space-x-1\">\n        <FaParking className=\" text-xs\" />\n        <span className=\"text-xs font-semibold \">Remaining Slots</span>\n      </div>\n      <div className=\" text-sm font-bold \">{remainingSlots}</div>\n      <p className=\"text-sm\">of {parkingSpots.length} total slots</p>\n    </div>\n  );\n};\n\nRemainingSlots.propTypes = {\n  parkingSpots: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default React.memo(RemainingSlots);\n","import React from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nfunction ConfirmAlert() {\n  const submit = ({ remove }) => {\n    confirmAlert({\n      title: \"Remove Vehicle\",\n      message: \"Are you sure you want to remove the vehicle?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            remove(); // Call the removeVehicle function here\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n  return {\n    removeVehicleDialog: submit,\n  };\n}\n\nexport default ConfirmAlert;\n","import { useEffect, useState } from \"react\";\nimport { TOTAL_PARKING_SPOTS } from \"constants\";\nimport { useAlert } from \"react-alert\";\nimport ConfirmAlert from \"components/ConfirmAlert\";\n\nfunction useHandleParking() {\n  const [parkingSpots, setParkingSpots] = useState(\n    Array(TOTAL_PARKING_SPOTS).fill(null)\n  );\n  const { removeVehicleDialog } = ConfirmAlert();\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(new Date()); // Track current time\n\n  useEffect(() => {\n    // Update time every 60 seconds\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  const alert = useAlert();\n\n  /**\n   *\n   * @returns {void}\n   * @description Function to park a vehicle in the parking lot.\n   * If the parking lot is full, an alert is shown.\n   * If the license plate is empty, an alert is shown.\n   * If the parking lot has space and the license plate is valid,\n   */\n  const parkVehicle = () => {\n    const availableSpotIndex = parkingSpots.findIndex((spot) => spot === null);\n    if (availableSpotIndex === -1) {\n      //   alert(\"Parking lot is full!\");\n      alert.error(\"Parking lot is full!\");\n      return;\n    }\n    if (licensePlate?.trim() === \"\") {\n      //   alert(\"Please enter a valid license plate.\");\n      alert.error(\"Please enter a valid license plate.\");\n      return;\n    }\n    //only unique license plates are allowed\n    const isLicensePlateExists = parkingSpots.some(\n      (spot) => spot?.plate?.toLowerCase() === licensePlate.toLowerCase()\n    );\n    if (isLicensePlateExists) {\n      //   alert(\"License plate already exists in the parking lot.\");\n      alert.error(\"License plate already exists in the parking lot.\");\n      return;\n    }\n    const newParkingSpots = [...parkingSpots];\n    newParkingSpots[availableSpotIndex] = {\n      plate: licensePlate.toUpperCase(),\n      slotNumber: availableSpotIndex + 1,\n      parkedAt: new Date(),\n    };\n    setParkingSpots(newParkingSpots);\n    setLicensePlate(\"\");\n    alert.success(\"Vehicle parked successfully!\");\n  };\n\n  /**\n   *\n   * @param {*} index  Index of the vehicle to be removed.\n   * @returns {void}\n   * @description Function to remove a vehicle from the parking lot.\n   */\n  const removeVehicle = (index) => {\n    const remove = () => {\n      const newParkingSpots = [...parkingSpots];\n      newParkingSpots[index] = null;\n      setParkingSpots(newParkingSpots);\n      alert.success(\"Vehicle removed successfully!\");\n    };\n    removeVehicleDialog({ remove });\n  };\n\n  /**\n   *\n   * @param {*} parkedAt  Date at which the vehicle was parked.\n   * @returns {string}  Returns the duration for which the vehicle was parked.\n   * @description Function to get the duration for which a vehicle was parked.\n   */\n  const getParkedDuration = (parkedAt) => {\n    const now = new Date();\n    const diff = Math.floor((currentTime - new Date(parkedAt)) / 1000);\n\n    // const diff = Math.floor((now - new Date(parkedAt)) / 1000);\n    const minutes = Math.floor(diff / 60);\n    const seconds = diff % 60;\n    return `${minutes} min, ${seconds} sec`;\n  };\n\n  /**\n   *\n   * @returns {Array}  Returns the filtered parking spots.\n   * @description Function to filter the parking spots based on the license plate.\n   * The filter is case-insensitive.\n   */\n  const filteredSpots = parkingSpots.filter(\n    (spot) =>\n      spot && spot?.plate?.toLowerCase()?.includes(filter?.toLowerCase())\n  );\n  return {\n    parkingSpots,\n    setParkingSpots,\n    licensePlate,\n    setLicensePlate,\n    filter,\n    setFilter,\n    parkVehicle,\n    removeVehicle,\n    getParkedDuration,\n    filteredSpots,\n  };\n}\n\nexport default useHandleParking;\n","export const TOTAL_PARKING_SPOTS = 10;\n","import React from \"react\";\nimport Header from \"components/Header\";\nimport {\n  SearchVehicle,\n  AddedVehicles,\n  AddNewVehicle,\n  FullParking,\n  RemainingSlots,\n} from \"pages/Home/components/index.js\";\n\nimport useHandleParking from \"pages/Home/hooks/useHandleParking\";\n\nconst Home = () => {\n  const {\n    parkingSpots,\n    licensePlate,\n    setLicensePlate,\n    filter,\n    setFilter,\n    parkVehicle,\n    removeVehicle,\n    getParkedDuration,\n    filteredSpots,\n  } = useHandleParking();\n  return (\n    <div className=\"container mx-auto p-6 min-h-screen \">\n      <div>\n        <Header Parking Lot Management>\n          <RemainingSlots {...{ parkingSpots }} />\n        </Header>\n\n        <div className=\"flex flex-col md:flex-row sm:justify-between sm:gap-4 mb-6 space-y-2 md:space-y-0\">\n          <AddNewVehicle {...{ licensePlate, setLicensePlate, parkVehicle }} />\n          <SearchVehicle {...{ filter, setFilter, filteredSpots }} />\n        </div>\n      </div>\n\n      <AddedVehicles {...{ filteredSpots, removeVehicle, getParkedDuration }} />\n      <FullParking {...{ parkingSpots }} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","children","_jsx","className","_jsxs","Link","to","onClick","label","value","onChange","placeholder","icon","handleButtonClick","type","vehicle","onRemove","index","parkedDuration","plate","slotNumber","Button","color","SearchVehicle","filter","setFilter","InputField","e","target","MdClear","React","AddedVehicles","filteredSpots","removeVehicle","getParkedDuration","length","map","spot","VehicleCard","parkedAt","licensePlate","setLicensePlate","parkVehicle","MdAdd","FullParking","parkingSpots","_Fragment","every","RemainingSlots","remainingSlots","FaParking","removeVehicleDialog","remove","confirmAlert","title","message","buttons","setParkingSpots","useState","Array","fill","ConfirmAlert","currentTime","setCurrentTime","Date","useEffect","interval","setInterval","clearInterval","alert","useAlert","_spot$plate2","_spot$plate2$toLowerC","toLowerCase","includes","availableSpotIndex","findIndex","error","trim","some","_spot$plate","newParkingSpots","toUpperCase","success","diff","Math","floor","Home","useHandleParking","Header","Parking","Lot","Management","AddNewVehicle"],"sourceRoot":""}